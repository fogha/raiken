name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=sha,prefix=main-

      - name: Build & push app image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy (pull & up -d)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CONTABO_HOST }}
          username: ${{ secrets.CONTABO_USERNAME }}
          key: ${{ secrets.CONTABO_SSH_KEY }}
          port: ${{ secrets.CONTABO_PORT }}
          script: |
            set -euo pipefail

            APP_DIR="/opt/raiken"
            cd "$APP_DIR"

            # Optional GHCR auth on the server for private images
            if [ -n "${{ secrets.GHCR_READ_USERNAME }}" ] && [ -n "${{ secrets.GHCR_READ_TOKEN }}" ]; then
              echo "${{ secrets.GHCR_READ_TOKEN }}" | sudo docker login ghcr.io -u "${{ secrets.GHCR_READ_USERNAME }}" --password-stdin
            fi

            # Pull only the 'app' service image (compose must already reference ghcr.io/fogha/raiken:latest)
            sudo docker compose pull app >/dev/null

            # Start/refresh stack
            sudo docker compose up -d

            # Health checks (quiet; print logs only on failure)
            for i in $(seq 1 10); do
              if curl -fsS http://localhost:3000 >/dev/null && curl -fsS http://localhost:3001/health >/dev/null; then
                ok=1; break
              fi
              sleep 3
            done
            if [ "${ok:-0}" -ne 1 ]; then
              sudo docker compose ps
              sudo docker compose logs app --tail=120 || true
              sudo docker compose logs relay --tail=120 || true
              exit 1
            fi

      - name: Nginx reload (optional)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CONTABO_HOST }}
          username: ${{ secrets.CONTABO_USERNAME }}
          key: ${{ secrets.CONTABO_SSH_KEY }}
          port: ${{ secrets.CONTABO_PORT }}
          script: |
            set -euo pipefail
            sudo nginx -t
            sudo systemctl reload nginx
